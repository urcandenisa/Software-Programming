// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using client.ObjectHandler;
using core.Models;
using System.Collections.Generic;
using System.Timers;

namespace client
{
	public partial class CreateAccount : NSViewController, IMessageController
    {
        private BaseHandler baseHandler;
        private AdminHandler adminHandler;
        private bool check = false;
       
		public CreateAccount (IntPtr handle) : base (handle)
		{
            baseHandler = new BaseHandler(this);
            this.adminHandler = new AdminHandler(this);
		}

        public CreateAccount()
        {
            baseHandler = new BaseHandler(this);
            this.adminHandler = new AdminHandler(this);
        }

    
        public void openWindow()
        {
            
        }

        public void showActivity(Activity activity)
        {
            
        }

        public void showList(List<Activity> activites)
        {
            
        }

        public void showMessage(string message)
        {
            this.InvokeOnMainThread(() => { messageLog.StringValue = message; });
        }

        public void showUser(User user)
        {
            
        }

      
        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            baseHandler = new BaseHandler(this);
            this.adminHandler = new AdminHandler(this);

        }
        partial void createAccount_clicked(NSObject sender)
        {
            if (check == false)
            { 
                 messageLog.StringValue = "Please read the terms and conditions!";
            }
            else
            {
               
                adminHandler.createAccount(email.StringValue, password.StringValue, firstName.StringValue, lastName.StringValue, country.StringValue, address.StringValue, city.StringValue, state.StringValue, BaseHandler.username, "2");
            }
        }

        partial void @checked(NSObject sender)
        {
            
            this.InvokeOnMainThread(() => { this.check = true; messageLog.StringValue = ""; });
        }

        partial void address_clicked(NSObject sender)
        {
            this.InvokeOnMainThread(() =>
            {
                messageLog.StringValue = "";
                checkedTerms.State = NSCellStateValue.Off;
            });
        }

        partial void city_clicked(NSObject sender)
        {
            this.InvokeOnMainThread(() =>
            {
                messageLog.StringValue = "";
                checkedTerms.State = NSCellStateValue.Off;
            });
        }

        partial void country_clicked(NSObject sender)
        {
            this.InvokeOnMainThread(() =>
            {
                messageLog.StringValue = "";
                checkedTerms.State = NSCellStateValue.Off;
            });
        }

        partial void email_clicked(NSObject sender)
        {
            messageLog.StringValue = "";
            checkedTerms.State = NSCellStateValue.Off;
            
        }

        partial void lastName_clicked(NSObject sender)
        {
            this.InvokeOnMainThread(() =>
            {
                messageLog.StringValue = "";
                checkedTerms.State = NSCellStateValue.Off;
            });
        }

        partial void firstName_clicked(NSObject sender)
        {
            this.InvokeOnMainThread(() =>
            {
                messageLog.StringValue = "";
                checkedTerms.State = NSCellStateValue.Off;
            });
        }

        partial void password_clicked(NSObject sender)
        {
            this.InvokeOnMainThread(() =>
            {
                messageLog.StringValue = "";
                checkedTerms.State = NSCellStateValue.Off;
            });
        }

        partial void state_clicked(NSObject sender)
        {
            this.InvokeOnMainThread(() =>
            {
                messageLog.StringValue = "";
                checkedTerms.State = NSCellStateValue.Off;
            });
        }

        public void showAlert()
        {
            throw new NotImplementedException();
        }
    }
}
